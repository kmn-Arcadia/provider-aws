//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by controller-gen. DO NOT EDIT.

package manualv1alpha1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ArrayProperties) DeepCopyInto(out *ArrayProperties) {
	*out = *in
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ArrayProperties.
func (in *ArrayProperties) DeepCopy() *ArrayProperties {
	if in == nil {
		return nil
	}
	out := new(ArrayProperties)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ArrayPropertiesDetail) DeepCopyInto(out *ArrayPropertiesDetail) {
	*out = *in
	if in.Index != nil {
		in, out := &in.Index, &out.Index
		*out = new(int64)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(int64)
		**out = **in
	}
	if in.StatusSummary != nil {
		in, out := &in.StatusSummary, &out.StatusSummary
		*out = make(map[string]*int64, len(*in))
		for key, val := range *in {
			var outVal *int64
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(int64)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ArrayPropertiesDetail.
func (in *ArrayPropertiesDetail) DeepCopy() *ArrayPropertiesDetail {
	if in == nil {
		return nil
	}
	out := new(ArrayPropertiesDetail)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AttemptContainerDetail) DeepCopyInto(out *AttemptContainerDetail) {
	*out = *in
	if in.ContainerInstanceArn != nil {
		in, out := &in.ContainerInstanceArn, &out.ContainerInstanceArn
		*out = new(string)
		**out = **in
	}
	if in.ExitCode != nil {
		in, out := &in.ExitCode, &out.ExitCode
		*out = new(int64)
		**out = **in
	}
	if in.LogStreamName != nil {
		in, out := &in.LogStreamName, &out.LogStreamName
		*out = new(string)
		**out = **in
	}
	if in.NetworkInterfaces != nil {
		in, out := &in.NetworkInterfaces, &out.NetworkInterfaces
		*out = make([]*NetworkInterface, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(NetworkInterface)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.Reason != nil {
		in, out := &in.Reason, &out.Reason
		*out = new(string)
		**out = **in
	}
	if in.TaskArn != nil {
		in, out := &in.TaskArn, &out.TaskArn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AttemptContainerDetail.
func (in *AttemptContainerDetail) DeepCopy() *AttemptContainerDetail {
	if in == nil {
		return nil
	}
	out := new(AttemptContainerDetail)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AttemptDetail) DeepCopyInto(out *AttemptDetail) {
	*out = *in
	if in.Container != nil {
		in, out := &in.Container, &out.Container
		*out = new(AttemptContainerDetail)
		(*in).DeepCopyInto(*out)
	}
	if in.StartedAt != nil {
		in, out := &in.StartedAt, &out.StartedAt
		*out = new(int64)
		**out = **in
	}
	if in.StatusReason != nil {
		in, out := &in.StatusReason, &out.StatusReason
		*out = new(string)
		**out = **in
	}
	if in.StoppedAt != nil {
		in, out := &in.StoppedAt, &out.StoppedAt
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AttemptDetail.
func (in *AttemptDetail) DeepCopy() *AttemptDetail {
	if in == nil {
		return nil
	}
	out := new(AttemptDetail)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContainerOverrides) DeepCopyInto(out *ContainerOverrides) {
	*out = *in
	if in.Command != nil {
		in, out := &in.Command, &out.Command
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Environment != nil {
		in, out := &in.Environment, &out.Environment
		*out = make([]*KeyValuePair, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(KeyValuePair)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.ResourceRequirements != nil {
		in, out := &in.ResourceRequirements, &out.ResourceRequirements
		*out = make([]*ResourceRequirement, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(ResourceRequirement)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContainerOverrides.
func (in *ContainerOverrides) DeepCopy() *ContainerOverrides {
	if in == nil {
		return nil
	}
	out := new(ContainerOverrides)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContainerProperties) DeepCopyInto(out *ContainerProperties) {
	*out = *in
	if in.Command != nil {
		in, out := &in.Command, &out.Command
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Environment != nil {
		in, out := &in.Environment, &out.Environment
		*out = make([]*KeyValuePair, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(KeyValuePair)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.ExecutionRoleArn != nil {
		in, out := &in.ExecutionRoleArn, &out.ExecutionRoleArn
		*out = new(string)
		**out = **in
	}
	if in.ExecutionRoleARNRef != nil {
		in, out := &in.ExecutionRoleARNRef, &out.ExecutionRoleARNRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ExecutionRoleARNSelector != nil {
		in, out := &in.ExecutionRoleARNSelector, &out.ExecutionRoleARNSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.FargatePlatformConfiguration != nil {
		in, out := &in.FargatePlatformConfiguration, &out.FargatePlatformConfiguration
		*out = new(FargatePlatformConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(string)
		**out = **in
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.JobRoleArn != nil {
		in, out := &in.JobRoleArn, &out.JobRoleArn
		*out = new(string)
		**out = **in
	}
	if in.JobRoleARNRef != nil {
		in, out := &in.JobRoleARNRef, &out.JobRoleARNRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.JobRoleARNSelector != nil {
		in, out := &in.JobRoleARNSelector, &out.JobRoleARNSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.LinuxParameters != nil {
		in, out := &in.LinuxParameters, &out.LinuxParameters
		*out = new(LinuxParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.LogConfiguration != nil {
		in, out := &in.LogConfiguration, &out.LogConfiguration
		*out = new(LogConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.MountPoints != nil {
		in, out := &in.MountPoints, &out.MountPoints
		*out = make([]*MountPoint, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(MountPoint)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.NetworkConfiguration != nil {
		in, out := &in.NetworkConfiguration, &out.NetworkConfiguration
		*out = new(NetworkConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.Privileged != nil {
		in, out := &in.Privileged, &out.Privileged
		*out = new(bool)
		**out = **in
	}
	if in.ReadonlyRootFilesystem != nil {
		in, out := &in.ReadonlyRootFilesystem, &out.ReadonlyRootFilesystem
		*out = new(bool)
		**out = **in
	}
	if in.ResourceRequirements != nil {
		in, out := &in.ResourceRequirements, &out.ResourceRequirements
		*out = make([]*ResourceRequirement, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(ResourceRequirement)
				**out = **in
			}
		}
	}
	if in.Secrets != nil {
		in, out := &in.Secrets, &out.Secrets
		*out = make([]*Secret, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Secret)
				**out = **in
			}
		}
	}
	if in.Ulimits != nil {
		in, out := &in.Ulimits, &out.Ulimits
		*out = make([]*Ulimit, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Ulimit)
				**out = **in
			}
		}
	}
	if in.User != nil {
		in, out := &in.User, &out.User
		*out = new(string)
		**out = **in
	}
	if in.Volumes != nil {
		in, out := &in.Volumes, &out.Volumes
		*out = make([]*Volume, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Volume)
				(*in).DeepCopyInto(*out)
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContainerProperties.
func (in *ContainerProperties) DeepCopy() *ContainerProperties {
	if in == nil {
		return nil
	}
	out := new(ContainerProperties)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Device) DeepCopyInto(out *Device) {
	*out = *in
	if in.ContainerPath != nil {
		in, out := &in.ContainerPath, &out.ContainerPath
		*out = new(string)
		**out = **in
	}
	if in.Permissions != nil {
		in, out := &in.Permissions, &out.Permissions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Device.
func (in *Device) DeepCopy() *Device {
	if in == nil {
		return nil
	}
	out := new(Device)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EFSAuthorizationConfig) DeepCopyInto(out *EFSAuthorizationConfig) {
	*out = *in
	if in.AccessPointID != nil {
		in, out := &in.AccessPointID, &out.AccessPointID
		*out = new(string)
		**out = **in
	}
	if in.AccessPointIDRef != nil {
		in, out := &in.AccessPointIDRef, &out.AccessPointIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.AccessPointIDSelector != nil {
		in, out := &in.AccessPointIDSelector, &out.AccessPointIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.IAM != nil {
		in, out := &in.IAM, &out.IAM
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EFSAuthorizationConfig.
func (in *EFSAuthorizationConfig) DeepCopy() *EFSAuthorizationConfig {
	if in == nil {
		return nil
	}
	out := new(EFSAuthorizationConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EFSVolumeConfiguration) DeepCopyInto(out *EFSVolumeConfiguration) {
	*out = *in
	if in.AuthorizationConfig != nil {
		in, out := &in.AuthorizationConfig, &out.AuthorizationConfig
		*out = new(EFSAuthorizationConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.FileSystemIDRef != nil {
		in, out := &in.FileSystemIDRef, &out.FileSystemIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.FileSystemIDSelector != nil {
		in, out := &in.FileSystemIDSelector, &out.FileSystemIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.RootDirectory != nil {
		in, out := &in.RootDirectory, &out.RootDirectory
		*out = new(string)
		**out = **in
	}
	if in.TransitEncryption != nil {
		in, out := &in.TransitEncryption, &out.TransitEncryption
		*out = new(string)
		**out = **in
	}
	if in.TransitEncryptionPort != nil {
		in, out := &in.TransitEncryptionPort, &out.TransitEncryptionPort
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EFSVolumeConfiguration.
func (in *EFSVolumeConfiguration) DeepCopy() *EFSVolumeConfiguration {
	if in == nil {
		return nil
	}
	out := new(EFSVolumeConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EvaluateOnExit) DeepCopyInto(out *EvaluateOnExit) {
	*out = *in
	if in.OnExitCode != nil {
		in, out := &in.OnExitCode, &out.OnExitCode
		*out = new(string)
		**out = **in
	}
	if in.OnReason != nil {
		in, out := &in.OnReason, &out.OnReason
		*out = new(string)
		**out = **in
	}
	if in.OnStatusReason != nil {
		in, out := &in.OnStatusReason, &out.OnStatusReason
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EvaluateOnExit.
func (in *EvaluateOnExit) DeepCopy() *EvaluateOnExit {
	if in == nil {
		return nil
	}
	out := new(EvaluateOnExit)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FargatePlatformConfiguration) DeepCopyInto(out *FargatePlatformConfiguration) {
	*out = *in
	if in.PlatformVersion != nil {
		in, out := &in.PlatformVersion, &out.PlatformVersion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FargatePlatformConfiguration.
func (in *FargatePlatformConfiguration) DeepCopy() *FargatePlatformConfiguration {
	if in == nil {
		return nil
	}
	out := new(FargatePlatformConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Host) DeepCopyInto(out *Host) {
	*out = *in
	if in.SourcePath != nil {
		in, out := &in.SourcePath, &out.SourcePath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Host.
func (in *Host) DeepCopy() *Host {
	if in == nil {
		return nil
	}
	out := new(Host)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Job) DeepCopyInto(out *Job) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Job.
func (in *Job) DeepCopy() *Job {
	if in == nil {
		return nil
	}
	out := new(Job)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Job) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobDefinition) DeepCopyInto(out *JobDefinition) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobDefinition.
func (in *JobDefinition) DeepCopy() *JobDefinition {
	if in == nil {
		return nil
	}
	out := new(JobDefinition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *JobDefinition) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobDefinitionList) DeepCopyInto(out *JobDefinitionList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]JobDefinition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobDefinitionList.
func (in *JobDefinitionList) DeepCopy() *JobDefinitionList {
	if in == nil {
		return nil
	}
	out := new(JobDefinitionList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *JobDefinitionList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobDefinitionObservation) DeepCopyInto(out *JobDefinitionObservation) {
	*out = *in
	if in.JobDefinitionArn != nil {
		in, out := &in.JobDefinitionArn, &out.JobDefinitionArn
		*out = new(string)
		**out = **in
	}
	if in.Revision != nil {
		in, out := &in.Revision, &out.Revision
		*out = new(int64)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobDefinitionObservation.
func (in *JobDefinitionObservation) DeepCopy() *JobDefinitionObservation {
	if in == nil {
		return nil
	}
	out := new(JobDefinitionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobDefinitionParameters) DeepCopyInto(out *JobDefinitionParameters) {
	*out = *in
	if in.ContainerProperties != nil {
		in, out := &in.ContainerProperties, &out.ContainerProperties
		*out = new(ContainerProperties)
		(*in).DeepCopyInto(*out)
	}
	if in.NodeProperties != nil {
		in, out := &in.NodeProperties, &out.NodeProperties
		*out = new(NodeProperties)
		(*in).DeepCopyInto(*out)
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.PlatformCapabilities != nil {
		in, out := &in.PlatformCapabilities, &out.PlatformCapabilities
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PropagateTags != nil {
		in, out := &in.PropagateTags, &out.PropagateTags
		*out = new(bool)
		**out = **in
	}
	if in.RetryStrategy != nil {
		in, out := &in.RetryStrategy, &out.RetryStrategy
		*out = new(RetryStrategy)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = new(JobTimeout)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobDefinitionParameters.
func (in *JobDefinitionParameters) DeepCopy() *JobDefinitionParameters {
	if in == nil {
		return nil
	}
	out := new(JobDefinitionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobDefinitionSpec) DeepCopyInto(out *JobDefinitionSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobDefinitionSpec.
func (in *JobDefinitionSpec) DeepCopy() *JobDefinitionSpec {
	if in == nil {
		return nil
	}
	out := new(JobDefinitionSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobDefinitionStatus) DeepCopyInto(out *JobDefinitionStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobDefinitionStatus.
func (in *JobDefinitionStatus) DeepCopy() *JobDefinitionStatus {
	if in == nil {
		return nil
	}
	out := new(JobDefinitionStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobDependency) DeepCopyInto(out *JobDependency) {
	*out = *in
	if in.JobID != nil {
		in, out := &in.JobID, &out.JobID
		*out = new(string)
		**out = **in
	}
	if in.JobIDRef != nil {
		in, out := &in.JobIDRef, &out.JobIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.JobIDSelector != nil {
		in, out := &in.JobIDSelector, &out.JobIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobDependency.
func (in *JobDependency) DeepCopy() *JobDependency {
	if in == nil {
		return nil
	}
	out := new(JobDependency)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobList) DeepCopyInto(out *JobList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Job, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobList.
func (in *JobList) DeepCopy() *JobList {
	if in == nil {
		return nil
	}
	out := new(JobList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *JobList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobObservation) DeepCopyInto(out *JobObservation) {
	*out = *in
	if in.ArrayProperties != nil {
		in, out := &in.ArrayProperties, &out.ArrayProperties
		*out = new(ArrayPropertiesDetail)
		(*in).DeepCopyInto(*out)
	}
	if in.Attempts != nil {
		in, out := &in.Attempts, &out.Attempts
		*out = make([]*AttemptDetail, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(AttemptDetail)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.CreatedAt != nil {
		in, out := &in.CreatedAt, &out.CreatedAt
		*out = new(int64)
		**out = **in
	}
	if in.JobArn != nil {
		in, out := &in.JobArn, &out.JobArn
		*out = new(string)
		**out = **in
	}
	if in.JobID != nil {
		in, out := &in.JobID, &out.JobID
		*out = new(string)
		**out = **in
	}
	if in.StartedAt != nil {
		in, out := &in.StartedAt, &out.StartedAt
		*out = new(int64)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.StatusReason != nil {
		in, out := &in.StatusReason, &out.StatusReason
		*out = new(string)
		**out = **in
	}
	if in.StoppedAt != nil {
		in, out := &in.StoppedAt, &out.StoppedAt
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobObservation.
func (in *JobObservation) DeepCopy() *JobObservation {
	if in == nil {
		return nil
	}
	out := new(JobObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobParameters) DeepCopyInto(out *JobParameters) {
	*out = *in
	if in.ArrayProperties != nil {
		in, out := &in.ArrayProperties, &out.ArrayProperties
		*out = new(ArrayProperties)
		(*in).DeepCopyInto(*out)
	}
	if in.ContainerOverrides != nil {
		in, out := &in.ContainerOverrides, &out.ContainerOverrides
		*out = new(ContainerOverrides)
		(*in).DeepCopyInto(*out)
	}
	if in.DependsOn != nil {
		in, out := &in.DependsOn, &out.DependsOn
		*out = make([]*JobDependency, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(JobDependency)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.JobDefinitionRef != nil {
		in, out := &in.JobDefinitionRef, &out.JobDefinitionRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.JobDefinitionSelector != nil {
		in, out := &in.JobDefinitionSelector, &out.JobDefinitionSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.JobQueueRef != nil {
		in, out := &in.JobQueueRef, &out.JobQueueRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.JobQueueSelector != nil {
		in, out := &in.JobQueueSelector, &out.JobQueueSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.NodeOverrides != nil {
		in, out := &in.NodeOverrides, &out.NodeOverrides
		*out = new(NodeOverrides)
		(*in).DeepCopyInto(*out)
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.PropagateTags != nil {
		in, out := &in.PropagateTags, &out.PropagateTags
		*out = new(bool)
		**out = **in
	}
	if in.RetryStrategy != nil {
		in, out := &in.RetryStrategy, &out.RetryStrategy
		*out = new(RetryStrategy)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = new(JobTimeout)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobParameters.
func (in *JobParameters) DeepCopy() *JobParameters {
	if in == nil {
		return nil
	}
	out := new(JobParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobSpec) DeepCopyInto(out *JobSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobSpec.
func (in *JobSpec) DeepCopy() *JobSpec {
	if in == nil {
		return nil
	}
	out := new(JobSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobStatus) DeepCopyInto(out *JobStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobStatus.
func (in *JobStatus) DeepCopy() *JobStatus {
	if in == nil {
		return nil
	}
	out := new(JobStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTimeout) DeepCopyInto(out *JobTimeout) {
	*out = *in
	if in.AttemptDurationSeconds != nil {
		in, out := &in.AttemptDurationSeconds, &out.AttemptDurationSeconds
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTimeout.
func (in *JobTimeout) DeepCopy() *JobTimeout {
	if in == nil {
		return nil
	}
	out := new(JobTimeout)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KeyValuePair) DeepCopyInto(out *KeyValuePair) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KeyValuePair.
func (in *KeyValuePair) DeepCopy() *KeyValuePair {
	if in == nil {
		return nil
	}
	out := new(KeyValuePair)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxParameters) DeepCopyInto(out *LinuxParameters) {
	*out = *in
	if in.Devices != nil {
		in, out := &in.Devices, &out.Devices
		*out = make([]*Device, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Device)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.InitProcessEnabled != nil {
		in, out := &in.InitProcessEnabled, &out.InitProcessEnabled
		*out = new(bool)
		**out = **in
	}
	if in.MaxSwap != nil {
		in, out := &in.MaxSwap, &out.MaxSwap
		*out = new(int64)
		**out = **in
	}
	if in.SharedMemorySize != nil {
		in, out := &in.SharedMemorySize, &out.SharedMemorySize
		*out = new(int64)
		**out = **in
	}
	if in.Swappiness != nil {
		in, out := &in.Swappiness, &out.Swappiness
		*out = new(int64)
		**out = **in
	}
	if in.Tmpfs != nil {
		in, out := &in.Tmpfs, &out.Tmpfs
		*out = make([]*Tmpfs, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Tmpfs)
				(*in).DeepCopyInto(*out)
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxParameters.
func (in *LinuxParameters) DeepCopy() *LinuxParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogConfiguration) DeepCopyInto(out *LogConfiguration) {
	*out = *in
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SecretOptions != nil {
		in, out := &in.SecretOptions, &out.SecretOptions
		*out = make([]*Secret, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Secret)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogConfiguration.
func (in *LogConfiguration) DeepCopy() *LogConfiguration {
	if in == nil {
		return nil
	}
	out := new(LogConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MountPoint) DeepCopyInto(out *MountPoint) {
	*out = *in
	if in.ContainerPath != nil {
		in, out := &in.ContainerPath, &out.ContainerPath
		*out = new(string)
		**out = **in
	}
	if in.ReadOnly != nil {
		in, out := &in.ReadOnly, &out.ReadOnly
		*out = new(bool)
		**out = **in
	}
	if in.SourceVolume != nil {
		in, out := &in.SourceVolume, &out.SourceVolume
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MountPoint.
func (in *MountPoint) DeepCopy() *MountPoint {
	if in == nil {
		return nil
	}
	out := new(MountPoint)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkConfiguration) DeepCopyInto(out *NetworkConfiguration) {
	*out = *in
	if in.AssignPublicIP != nil {
		in, out := &in.AssignPublicIP, &out.AssignPublicIP
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkConfiguration.
func (in *NetworkConfiguration) DeepCopy() *NetworkConfiguration {
	if in == nil {
		return nil
	}
	out := new(NetworkConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInterface) DeepCopyInto(out *NetworkInterface) {
	*out = *in
	if in.AttachmentID != nil {
		in, out := &in.AttachmentID, &out.AttachmentID
		*out = new(string)
		**out = **in
	}
	if in.Ipv6Address != nil {
		in, out := &in.Ipv6Address, &out.Ipv6Address
		*out = new(string)
		**out = **in
	}
	if in.PrivateIpv4Address != nil {
		in, out := &in.PrivateIpv4Address, &out.PrivateIpv4Address
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInterface.
func (in *NetworkInterface) DeepCopy() *NetworkInterface {
	if in == nil {
		return nil
	}
	out := new(NetworkInterface)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeOverrides) DeepCopyInto(out *NodeOverrides) {
	*out = *in
	if in.NodePropertyOverrides != nil {
		in, out := &in.NodePropertyOverrides, &out.NodePropertyOverrides
		*out = make([]*NodePropertyOverride, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(NodePropertyOverride)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.NumNodes != nil {
		in, out := &in.NumNodes, &out.NumNodes
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeOverrides.
func (in *NodeOverrides) DeepCopy() *NodeOverrides {
	if in == nil {
		return nil
	}
	out := new(NodeOverrides)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeProperties) DeepCopyInto(out *NodeProperties) {
	*out = *in
	if in.NodeRangeProperties != nil {
		in, out := &in.NodeRangeProperties, &out.NodeRangeProperties
		*out = make([]NodeRangeProperty, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeProperties.
func (in *NodeProperties) DeepCopy() *NodeProperties {
	if in == nil {
		return nil
	}
	out := new(NodeProperties)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodePropertyOverride) DeepCopyInto(out *NodePropertyOverride) {
	*out = *in
	if in.ContainerOverrides != nil {
		in, out := &in.ContainerOverrides, &out.ContainerOverrides
		*out = new(ContainerOverrides)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodePropertyOverride.
func (in *NodePropertyOverride) DeepCopy() *NodePropertyOverride {
	if in == nil {
		return nil
	}
	out := new(NodePropertyOverride)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeRangeProperty) DeepCopyInto(out *NodeRangeProperty) {
	*out = *in
	if in.Container != nil {
		in, out := &in.Container, &out.Container
		*out = new(ContainerProperties)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeRangeProperty.
func (in *NodeRangeProperty) DeepCopy() *NodeRangeProperty {
	if in == nil {
		return nil
	}
	out := new(NodeRangeProperty)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceRequirement) DeepCopyInto(out *ResourceRequirement) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceRequirement.
func (in *ResourceRequirement) DeepCopy() *ResourceRequirement {
	if in == nil {
		return nil
	}
	out := new(ResourceRequirement)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RetryStrategy) DeepCopyInto(out *RetryStrategy) {
	*out = *in
	if in.Attempts != nil {
		in, out := &in.Attempts, &out.Attempts
		*out = new(int64)
		**out = **in
	}
	if in.EvaluateOnExit != nil {
		in, out := &in.EvaluateOnExit, &out.EvaluateOnExit
		*out = make([]*EvaluateOnExit, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(EvaluateOnExit)
				(*in).DeepCopyInto(*out)
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RetryStrategy.
func (in *RetryStrategy) DeepCopy() *RetryStrategy {
	if in == nil {
		return nil
	}
	out := new(RetryStrategy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Secret) DeepCopyInto(out *Secret) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Secret.
func (in *Secret) DeepCopy() *Secret {
	if in == nil {
		return nil
	}
	out := new(Secret)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Tmpfs) DeepCopyInto(out *Tmpfs) {
	*out = *in
	if in.MountOptions != nil {
		in, out := &in.MountOptions, &out.MountOptions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Tmpfs.
func (in *Tmpfs) DeepCopy() *Tmpfs {
	if in == nil {
		return nil
	}
	out := new(Tmpfs)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Ulimit) DeepCopyInto(out *Ulimit) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Ulimit.
func (in *Ulimit) DeepCopy() *Ulimit {
	if in == nil {
		return nil
	}
	out := new(Ulimit)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Volume) DeepCopyInto(out *Volume) {
	*out = *in
	if in.EfsVolumeConfiguration != nil {
		in, out := &in.EfsVolumeConfiguration, &out.EfsVolumeConfiguration
		*out = new(EFSVolumeConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(Host)
		(*in).DeepCopyInto(*out)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Volume.
func (in *Volume) DeepCopy() *Volume {
	if in == nil {
		return nil
	}
	out := new(Volume)
	in.DeepCopyInto(out)
	return out
}
