/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by ack-generate. DO NOT EDIT.

package v1alpha1

type ArrayJobDependency string

const (
	ArrayJobDependency_N_TO_N     ArrayJobDependency = "N_TO_N"
	ArrayJobDependency_SEQUENTIAL ArrayJobDependency = "SEQUENTIAL"
)

type AssignPublicIP string

const (
	AssignPublicIP_ENABLED  AssignPublicIP = "ENABLED"
	AssignPublicIP_DISABLED AssignPublicIP = "DISABLED"
)

type CEState string

const (
	CEState_ENABLED  CEState = "ENABLED"
	CEState_DISABLED CEState = "DISABLED"
)

type CEStatus string

const (
	CEStatus_CREATING CEStatus = "CREATING"
	CEStatus_UPDATING CEStatus = "UPDATING"
	CEStatus_DELETING CEStatus = "DELETING"
	CEStatus_DELETED  CEStatus = "DELETED"
	CEStatus_VALID    CEStatus = "VALID"
	CEStatus_INVALID  CEStatus = "INVALID"
)

type CEType string

const (
	CEType_MANAGED   CEType = "MANAGED"
	CEType_UNMANAGED CEType = "UNMANAGED"
)

type CRAllocationStrategy string

const (
	CRAllocationStrategy_BEST_FIT                CRAllocationStrategy = "BEST_FIT"
	CRAllocationStrategy_BEST_FIT_PROGRESSIVE    CRAllocationStrategy = "BEST_FIT_PROGRESSIVE"
	CRAllocationStrategy_SPOT_CAPACITY_OPTIMIZED CRAllocationStrategy = "SPOT_CAPACITY_OPTIMIZED"
)

type CRType string

const (
	CRType_EC2          CRType = "EC2"
	CRType_SPOT         CRType = "SPOT"
	CRType_FARGATE      CRType = "FARGATE"
	CRType_FARGATE_SPOT CRType = "FARGATE_SPOT"
)

type CRUpdateAllocationStrategy string

const (
	CRUpdateAllocationStrategy_BEST_FIT_PROGRESSIVE    CRUpdateAllocationStrategy = "BEST_FIT_PROGRESSIVE"
	CRUpdateAllocationStrategy_SPOT_CAPACITY_OPTIMIZED CRUpdateAllocationStrategy = "SPOT_CAPACITY_OPTIMIZED"
)

type DeviceCgroupPermission string

const (
	DeviceCgroupPermission_READ  DeviceCgroupPermission = "READ"
	DeviceCgroupPermission_WRITE DeviceCgroupPermission = "WRITE"
	DeviceCgroupPermission_MKNOD DeviceCgroupPermission = "MKNOD"
)

type EFSAuthorizationConfigIAM string

const (
	EFSAuthorizationConfigIAM_ENABLED  EFSAuthorizationConfigIAM = "ENABLED"
	EFSAuthorizationConfigIAM_DISABLED EFSAuthorizationConfigIAM = "DISABLED"
)

type EFSTransitEncryption string

const (
	EFSTransitEncryption_ENABLED  EFSTransitEncryption = "ENABLED"
	EFSTransitEncryption_DISABLED EFSTransitEncryption = "DISABLED"
)

type JQState string

const (
	JQState_ENABLED  JQState = "ENABLED"
	JQState_DISABLED JQState = "DISABLED"
)

type JQStatus string

const (
	JQStatus_CREATING JQStatus = "CREATING"
	JQStatus_UPDATING JQStatus = "UPDATING"
	JQStatus_DELETING JQStatus = "DELETING"
	JQStatus_DELETED  JQStatus = "DELETED"
	JQStatus_VALID    JQStatus = "VALID"
	JQStatus_INVALID  JQStatus = "INVALID"
)

type JobDefinitionType string

const (
	JobDefinitionType_container JobDefinitionType = "container"
	JobDefinitionType_multinode JobDefinitionType = "multinode"
)

type JobStatus string

const (
	JobStatus_SUBMITTED JobStatus = "SUBMITTED"
	JobStatus_PENDING   JobStatus = "PENDING"
	JobStatus_RUNNABLE  JobStatus = "RUNNABLE"
	JobStatus_STARTING  JobStatus = "STARTING"
	JobStatus_RUNNING   JobStatus = "RUNNING"
	JobStatus_SUCCEEDED JobStatus = "SUCCEEDED"
	JobStatus_FAILED    JobStatus = "FAILED"
)

type LogDriver string

const (
	LogDriver_json_file LogDriver = "json-file"
	LogDriver_syslog    LogDriver = "syslog"
	LogDriver_journald  LogDriver = "journald"
	LogDriver_gelf      LogDriver = "gelf"
	LogDriver_fluentd   LogDriver = "fluentd"
	LogDriver_awslogs   LogDriver = "awslogs"
	LogDriver_splunk    LogDriver = "splunk"
)

type PlatformCapability string

const (
	PlatformCapability_EC2     PlatformCapability = "EC2"
	PlatformCapability_FARGATE PlatformCapability = "FARGATE"
)

type ResourceType string

const (
	ResourceType_GPU    ResourceType = "GPU"
	ResourceType_VCPU   ResourceType = "VCPU"
	ResourceType_MEMORY ResourceType = "MEMORY"
)

type RetryAction string

const (
	RetryAction_RETRY RetryAction = "RETRY"
	RetryAction_EXIT  RetryAction = "EXIT"
)
